	? Change "aspects" to the proxy objects

	? Program automatic restore to the default settings

	? Framebuffer texture available settings

	? Default sampler uniforms sequential values assignment. https://www.khronos.org/webgl/wiki/TextureState. In progress.

	? ProgramSources proxy mode. Is programmatical shader sources preprocessing a good idea?
	
	? `Uber shader program` (with list of uniforms like useLighting, useAlphaMap) in most cases are not good.
	
	? Multiple textures demo
	
	? Bind resources just after creation to allow instant chained methods building. Eliminate client state tracking. Rely on explicit Bind operation. In java provide different interfaces to force binding where necessary.
	
	? Client state tracking wrappers

	? Do we need first, count and instances count to be properties of the program instance. And gl draw mode too.
	
	? Include sources preprocessing to the ProgramInstance. Is sources preprocessing a good way of dealing with shaders?

	? Method available check mode instead of extension check. Mock objects???	

	+ Depth mask and color mask must be set in frame buffer ClearXXXX methods. Should them be used as Program methods? No they are more related to the frame buffer Clear() method.

	+ Difference between attribute index and location is that index is program-specific and constant value while location is vertex attribute pointer 
	
	+ Default draw arrays elements count. 
		- Check o3gl CST variable to retrieve current element array buffer elements type.

	+ Array buffer pointer type must not match only possible vertex attribute float type. Pointer size (components count) can not match decalred attribute type (though this is very weird case). Pointer itself contains all the necessary type and size information. But 

	+ Uniform types must match glUniformXXX by type and arguments size. No type conversion or partial value are applied. Therefore uniform type unambiguously matches one of glUniform setter method.

	+ Frame buffer related `gl.clear` method is affected by the following settings:
		
		`clearColor` and `clearDepth`
		
		scissor test enabled/disabled
		
		depth and color mask

	
	+ Scissor test affects both program output and framebuffer clear methods.

	- ArrayBuffer.Pointer and Texture.Target should be replaced with new instance generation. 

	- TextureCubeMap is not explicit instance of Texture2D, but it provides access to six Texture2D sides of the cubemap.

	- Implement all texture methods in the basic Texture class. Its subclasses just make some of those methods available via interfaces.

	- Textures internal format. OpenglES 3.0 allows sized version of the internal format. https://www.khronos.org/opengles/sdk/docs/man3/ texImage2D description.
	
	- Textures format, internal format and type of texture data
	
	? QI Links:
		
		- Nice examples with explanation: http://www.nutty.ca/?page_id=352&link=ssao
	
		- http://www.webgl.com/
		
		- Fireball explosion: http://www.clicktorelease.com/code/perlin/explosion.html
	
		- http://inear.se/fireshader/
	
		- http://glslsandbox.com/
	
		- raymarching.com
		
		- Asteroids hiting earth: http://webglsamples.org/spacerocks/spacerocks.html
	
		- Bumpnormal mapping http://www.chandlerprall.com/webgl/bumpmaps/parallax.html
	
	- Choose and implement 3d format
	
	- SSAO + DoF + deffered rendering (MRT) renderer
	
	- DepthTest and StencilTest must be methods of Program. They allow explicitly set corresponding tests

	- Runnable instance with configured draw mode, first element, elements count
	
	- Vertex array VertexAttributeXXXX methods. Do we need to consider instanced arrays in these methods

	- Proram instance functor
	
	- Draw points and point size
	
	- Viewport and framebuffer
		
		- Program.FrameBuffer(fb) 	// Bind frame buffer. Enables depth/stencil if there are attachments. Set up maximum viewport size by default. 
		
		- Program.Color(t1, t2)		// Set up color attachements. Set up viewport size
		
		- Program.Depth(db) 		// Set up depth attachment, viewport size
		
	
	- ProgramInstance:
		
		- Keep settings for uniforms and attributes
		
		- Allow shader preprocessing and deferred initialization
		
		- If VAO is set, attribute setters are executed immediately. Otherwise assgnment is deffered
		
		- If framebuffer is assigned it is bound before every drawcall. Color, Depth, Stencil are convenience methods that cause new implicit framebuffer object creation. Implicit frame, render and uniform buffers are stored internally and deleted in the ProgramInstance.Delete()
		
		- Viewport binding
		
		- Depth/Color Mask, DepthTest, Blending
	
	- Uniform and attribute setters method name contains size and type information and can accept values of different types. For example fv accepth both array and js typed array. 
	
	- Frame buffer scissor test
	
	- What is size in getActiveUniform???
	
	- Test sparse attribute location binding
	
	- Method signatures designed to be cached on the client side
	
	- Does uniform index match uniform location. Can they alter?

	- Test arrays of uniforms and attributes

	- Performance test (multiple primitive objects rendering)
	
	- Program internal frame buffer cache.
		
		With multiple framebuffers generated for various color, depth and stencil attachements. 		
		This eliminates external framebuffers manipulations.		
		Allows simplified "render to texture" semantics. 
		Use case: two convolution shader passes. 
		Possible problem is deletion of the created framebuffer objects
	
	- What is more expensive: switching between framebuffers or changing frame buffer color attachement
	
	- Program instances concept
		
	- Nehe examples texture deffered loading causes texture initialization error
	
	
	- Various webgl 2.0 features and extensions support

		- ANGLE_instanced_arrays
		
			- VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE. get vertex attribute parameter, consider it in automatic instance count computation
	

		
	- BlurStroke shader
			
	- Resources cleanup. Like disabling vertex arrays, unbinding textures from texture units etc
	
	- Embedded matrices builder module
		
	- GLTF loader
	
	- Array buffer `View` helper object instead of pointer. With _count property. 
	
	- Resource factories. To create preconfigured resources.
	
	